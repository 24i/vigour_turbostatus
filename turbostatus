#!/bin/bash

local Y="\033[1;33m"
local B="\033[1;34m"
local G="\033[1;32m"
local NC="\033[0m" # No Color

echo -e "$Y--- Status$NC"

if [ "$1" == "remote" ]; then
  echo -e "$Y-- Updating remotes$NC"
fi

for n in `ls -1d */`
do
  cd $n

  if [ ! -d .git ]; then
    cd ..
    continue
  fi

  local BRANCH=`git rev-parse --abbrev-ref HEAD`

  if [ "$1" == "remote" ]; then
    git remote update > /dev/null 2>&1
  fi

  local LOCAL=$(git rev-parse @)
  local REMOTE=$(git rev-parse @{u})
  local BASE=$(git merge-base @ @{u})

  if [ $LOCAL = $REMOTE ]; then
    local STATE="Up-to-date"
  elif [ $LOCAL = $BASE ]; then
    local STATE="Need to pull"
  elif [ $REMOTE = $BASE ]; then
    local STATE="Need to push"
  else
    local STATE="Diverged"
  fi

  UNCOMMITED=""
  [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]] && UNCOMMITED="(Dirty)"
  [[ $(expr `git status --porcelain 2>/dev/null| grep "^??" | wc -l`) -gt "0" ]] && UNCOMMITED="$UNCOMMITED(Untracked files)"

  cd ..

  # awk being used because of wird zsh printf bug that does lot left align strings
  # should just be:
  # printf "$B%-30s$NC $G%-15s$NC %-20s\n" $n $BRANCH $STATE
  awk 'BEGIN { printf "'$B'%-30s'$NC' '$G'%-15s'$NC' %-15s '$Y'%s'$NC'\n", "'$n'", "'$BRANCH'", "'$STATE'", "'$UNCOMMITED'" }'

done
echo -e "$Y--- Done.$NC"

